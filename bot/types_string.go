// Code generated by "stringer -type=Gender,Class,MoralAlignment,EthicalAlignment,Position,Condition -output types_string.go"; DO NOT EDIT.

package bot

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GENDER_UNKNOWN-0]
	_ = x[GENDER_MALE-1]
	_ = x[GENDER_FEMALE-2]
}

const _Gender_name = "GENDER_UNKNOWNGENDER_MALEGENDER_FEMALE"

var _Gender_index = [...]uint8{0, 14, 25, 38}

func (i Gender) String() string {
	if i < 0 || i >= Gender(len(_Gender_index)-1) {
		return "Gender(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Gender_name[_Gender_index[i]:_Gender_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CLASS_UNKNOWN-0]
	_ = x[CLASS_MERCENARY-1]
	_ = x[CLASS_RANGER-2]
	_ = x[CLASS_KNIGHT_OF_SOLAMNIA-3]
	_ = x[CLASS_THIEF-4]
	_ = x[CLASS_ASSASSIN-5]
	_ = x[CLASS_PRIEST_OF_MISHAKAL-6]
	_ = x[CLASS_PRIEST_OF_MORGION-7]
	_ = x[CLASS_MAGE-8]
}

const _Class_name = "CLASS_UNKNOWNCLASS_MERCENARYCLASS_RANGERCLASS_KNIGHT_OF_SOLAMNIACLASS_THIEFCLASS_ASSASSINCLASS_PRIEST_OF_MISHAKALCLASS_PRIEST_OF_MORGIONCLASS_MAGE"

var _Class_index = [...]uint8{0, 13, 28, 40, 64, 75, 89, 113, 136, 146}

func (i Class) String() string {
	if i < 0 || i >= Class(len(_Class_index)-1) {
		return "Class(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Class_name[_Class_index[i]:_Class_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MORAL_ALIGNMENT_UNKNOWN-0]
	_ = x[MORAL_ALIGNMENT_EVIL-1]
	_ = x[MORAL_ALIGNMENT_NEUTRAL-2]
	_ = x[MORAL_ALIGNMENT_GOOD-3]
}

const _MoralAlignment_name = "MORAL_ALIGNMENT_UNKNOWNMORAL_ALIGNMENT_EVILMORAL_ALIGNMENT_NEUTRALMORAL_ALIGNMENT_GOOD"

var _MoralAlignment_index = [...]uint8{0, 23, 43, 66, 86}

func (i MoralAlignment) String() string {
	if i < 0 || i >= MoralAlignment(len(_MoralAlignment_index)-1) {
		return "MoralAlignment(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MoralAlignment_name[_MoralAlignment_index[i]:_MoralAlignment_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ETHICAL_ALIGNMENT_UNKNOWN-0]
	_ = x[ETHICAL_ALIGNMENT_CHAOTIC-1]
	_ = x[ETHICAL_ALIGNMENT_NEUTRAL-2]
	_ = x[ETHICAL_ALIGNMENT_GOOD-3]
}

const _EthicalAlignment_name = "ETHICAL_ALIGNMENT_UNKNOWNETHICAL_ALIGNMENT_CHAOTICETHICAL_ALIGNMENT_NEUTRALETHICAL_ALIGNMENT_GOOD"

var _EthicalAlignment_index = [...]uint8{0, 25, 50, 75, 97}

func (i EthicalAlignment) String() string {
	if i < 0 || i >= EthicalAlignment(len(_EthicalAlignment_index)-1) {
		return "EthicalAlignment(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _EthicalAlignment_name[_EthicalAlignment_index[i]:_EthicalAlignment_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[POSITION_UNKNOWN-0]
	_ = x[POSITION_STANDING-1]
	_ = x[POSITION_SITTING-2]
	_ = x[POSITION_LYING-3]
	_ = x[POSITION_RESTING-4]
	_ = x[POSITION_SLEEPING-5]
}

const _Position_name = "POSITION_UNKNOWNPOSITION_STANDINGPOSITION_SITTINGPOSITION_LYINGPOSITION_RESTINGPOSITION_SLEEPING"

var _Position_index = [...]uint8{0, 16, 33, 49, 63, 79, 96}

func (i Position) String() string {
	if i < 0 || i >= Position(len(_Position_index)-1) {
		return "Position(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Position_name[_Position_index[i]:_Position_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CONDITION_UNKNOWN-0]
	_ = x[CONDITION_PERFECT-1]
	_ = x[CONDITION_VERY_GOOD-2]
	_ = x[CONDITION_GOOD-3]
	_ = x[CONDITION_AVERAGE-4]
	_ = x[CONDITION_BAD-5]
	_ = x[CONDITION_VERY_BAD-6]
	_ = x[CONDITION_AWFUL-7]
	_ = x[CONDITION_DYING-8]
}

const _Condition_name = "CONDITION_UNKNOWNCONDITION_PERFECTCONDITION_VERY_GOODCONDITION_GOODCONDITION_AVERAGECONDITION_BADCONDITION_VERY_BADCONDITION_AWFULCONDITION_DYING"

var _Condition_index = [...]uint8{0, 17, 34, 53, 67, 84, 97, 115, 130, 145}

func (i Condition) String() string {
	if i < 0 || i >= Condition(len(_Condition_index)-1) {
		return "Condition(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Condition_name[_Condition_index[i]:_Condition_index[i+1]]
}
